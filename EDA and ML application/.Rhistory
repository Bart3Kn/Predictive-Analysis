knitr::opts_chunk$set(echo = TRUE)
data = read.csv("heart_failure_clinical_records_dataset.csv")
View(data)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("tidyverse")
#install.packages("ggplot2")
#install.packages("ggpubr")
#install.packages("corrplot")
library(ggplot2)
library(tidyverse)
library(ggpubr)
library(corrplot)
# Since I am using large amounts of data, we can look at the population of the data
# Sex
plotSex <- ggplot(data, aes(x = sexCH)) + geom_bar(fill = "turquoise") + labs(x = "Sex", title = "Population Distributions") + theme_minimal(base_size = 10)
plotSmoke <- ggplot(data, aes(x = smoking)) + geom_bar(fill = "orangered") + labs(x = "Smoking") +theme_minimal(base_size = 10)
plotDiab <- ggplot(data, aes(x = diabetes)) + geom_bar(fill = "red") + labs(x = "Diabetics") +theme_minimal(base_size = 10)
ggarrange(plotSex, plotSmoke, plotDiab)
# Since I am using large amounts of data, we can look at the population of the data
# Sex
plotSex <- ggplot(data, aes(x = sexCH)) + geom_bar(fill = "turquoise") + labs(x = "Sex", title = "Population Distributions") + theme_minimal(base_size = 10)
plotSmoke <- ggplot(data, aes(x = smoking)) + geom_bar(fill = "orangered") + labs(x = "Smoking") +theme_minimal(base_size = 10)
plotDiab <- ggplot(data, aes(x = diabetes)) + geom_bar(fill = "red") + labs(x = "Diabetics") +theme_minimal(base_size = 10)
ggarrange(plotSex, plotSmoke, plotDiab)
#Adding ID to keep track of data
data$id <- seq.int(nrow(data))
data <- data %>% relocate(id)
#Assigning Character Value to correct parameters
data$sexCH <- ifelse(data$sex == 1, "Male", "Female")
data$sex <- as.logical(data$sex)
data$anaemiaCH <- ifelse(data$anaemia == 1, "Yes", "No")
data$anaemia <- as.logical(data$anaemia)
data$diabetesCH <- ifelse(data$diabetes == 1, "Yes", "No")
data$diabetes <- as.logical(data$diabetes)
data$high_blood_pressureCH <- ifelse(data$high_blood_pressure == 1, "Yes", "No")
data$high_blood_pressure <- as.logical(data$high_blood_pressure)
data$smokingCH <- ifelse(data$smoking == 1, "Yes", "No")
data$smoking <- as.logical(data$smoking)
summary(data)
write.csv(data, "./data.csv", row.names = FALSE)
# Since I am using large amounts of data, we can look at the population of the data
# Sex
plotSex <- ggplot(data, aes(x = sexCH)) + geom_bar(fill = "turquoise") + labs(x = "Sex", title = "Population Distributions") + theme_minimal(base_size = 10)
plotSmoke <- ggplot(data, aes(x = smokingCH)) + geom_bar(fill = "orangered") + labs(x = "Smoking") +theme_minimal(base_size = 10)
plotDiab <- ggplot(data, aes(x = diabetesCH)) + geom_bar(fill = "red") + labs(x = "Diabetics") +theme_minimal(base_size = 10)
ggarrange(plotSex, plotSmoke, plotDiab)
ggplot(data, aes(x = age, y = smokingCH, color = sexCH)) + geom_boxplot()
# Since I am using large amounts of data, we can look at the population of the data
# Sex
plotSex <- ggplot(data, aes(x = sexCH)) + geom_bar(fill = "turquoise") + labs(x = "Sex", title = "Population Distributions") + theme_minimal(base_size = 10)
plotSmoke <- ggplot(data, aes(x = smokingCH)) + geom_bar(fill = "orangered") + labs(x = "Smoking") +theme_minimal(base_size = 10)
plotDiab <- ggplot(data, aes(x = diabetesCH)) + geom_bar(fill = "red") + labs(x = "Diabetic") +theme_minimal(base_size = 10)
ggarrange(plotSex, plotSmoke, plotDiab)
ggplot(data, aes(x = age, y = smokingCH, color = sexCH)) + geom_boxplot()
# Since I am using large amounts of data, we can look at the population of the data
# Sex
plotSex <- ggplot(data, aes(x = sexCH)) + geom_bar(fill = "turquoise") + labs(x = "Sex", title = "Population Distributions") + theme_minimal(base_size = 10)
plotSmoke <- ggplot(data, aes(x = smokingCH)) + geom_bar(fill = "orangered") + labs(x = "Smoking") +theme_minimal(base_size = 10)
plotDiab <- ggplot(data, aes(x = diabetesCH)) + geom_bar(fill = "red") + labs(x = "Diabetic") +theme_minimal(base_size = 10)
plotDeath <- ggplot(data, aes(x = DEATH_EVENT)) + geom_bar(fill = "slateblue") + labs(x = "Died during follow up period") +theme_minimal(base_size = 10)
ggarrange(plotSex, plotSmoke, plotDiab, plotDeath)
ggplot(data, aes(x = age, y = smokingCH, color = sexCH)) + geom_boxplot()
ggplot()
#Adding ID to keep track of data
data$id <- seq.int(nrow(data))
data <- data %>% relocate(id)
#Assigning Character Value to correct parameters
data$sexCH <- ifelse(data$sex == 1, "Male", "Female")
data$sex <- as.logical(data$sex)
data$anaemiaCH <- ifelse(data$anaemia == 1, "Yes", "No")
data$anaemia <- as.logical(data$anaemia)
data$diabetesCH <- ifelse(data$diabetes == 1, "Yes", "No")
data$diabetes <- as.logical(data$diabetes)
data$high_blood_pressureCH <- ifelse(data$high_blood_pressure == 1, "Yes", "No")
data$high_blood_pressure <- as.logical(data$high_blood_pressure)
data$smokingCH <- ifelse(data$smoking == 1, "Yes", "No")
data$smoking <- as.logical(data$smoking)
data$DEATH_EVENT <- as.logical(data$DEATH_EVENT)
summary(data)
write.csv(data, "./data.csv", row.names = FALSE)
# Since I am using large amounts of data, we can look at the population of the data
# Sex
plotSex <- ggplot(data, aes(x = sexCH)) + geom_bar(fill = "turquoise") + labs(x = "Sex", title = "Population Distributions") + theme_minimal(base_size = 10)
plotSmoke <- ggplot(data, aes(x = smokingCH)) + geom_bar(fill = "orangered") + labs(x = "Smoking") +theme_minimal(base_size = 10)
plotDiab <- ggplot(data, aes(x = diabetesCH)) + geom_bar(fill = "red") + labs(x = "Diabetic") +theme_minimal(base_size = 10)
plotDeath <- ggplot(data, aes(x = DEATH_EVENT)) + geom_bar(fill = "slateblue") + labs(x = "Died during follow up period") +theme_minimal(base_size = 10)
ggarrange(plotSex, plotSmoke, plotDiab, plotDeath)
ggplot(data, aes(x = age, y = smokingCH, color = sexCH)) + geom_boxplot()
ggplot()
#AGE
ggplot(data, aes(x=age)) + geom_histogram(binwidth = 5, colour = "white", fill="seagreen", alpha = 0.7)+ theme_minimal(base_size = 10) + labs(title = "Age Distribution") + geom_density(eval(bquote(aes(y=..count..*5))),colour="black")
#CPK
ggplot(data, aes(x = creatinine_phosphokinase)) + geom_histogram(binwidth = 100, colour = "white", fill = "orangered", alpha = 0.7) + labs(title = "Creatinine Phosphokinase Distribution") + geom_density(eval(bquote(aes(y=..count.. * 100))),colour="black") + geom_vline(xintercept = 10, linetype = "dashed") + geom_vline(xintercept = 120, linetype = "dashed")
#Ejection Fraction
ggplot(data, aes(x = ejection_fraction )) + geom_histogram(binwidth = 5, colour =  "white", fill = "blue", alpha = 0.7) + labs(title = "Histogram of Ejection Fraction") + geom_density(eval(bquote(aes(y=..count..*5))),colour="black") + geom_vline(xintercept = 40, linetype = "dashed") + annotate("text", x = 20, y = 60, label = "Abnormal") + annotate("text", x = 55, y = 60, label = "Normal")
#Platelets
ggplot(data, aes(x = platelets)) + geom_histogram(binwidth = 25000, colour =  "white", fill = "red", alpha = 0.7) + labs(title = "Histogram of Platelet Count") + geom_density(eval(bquote(aes(y=..count.. *25000))),colour="black") + geom_vline(xintercept = 150000, linetype = "dashed") + geom_vline(xintercept = 450000, linetype = "dashed")
#Serum Creatinine
ggplot(data, aes(x = serum_creatinine)) + geom_histogram(binwidth = 0.2, colour =  "white", fill = "plum", alpha = 0.7) + labs(title = "Histogram of Creatinine in Blood") + geom_density(eval(bquote(aes(y=..count..*0.2))),colour="black") + geom_vline(xintercept = 0.59, linetype = "dashed") + geom_vline(xintercept = 1.35, linetype = "dashed")
#Serum Sodium
ggplot(data, aes(x = serum_sodium)) + geom_histogram(binwidth = 1, colour =  "white", fill = "slateblue", alpha = 0.7) + labs(title = "Histogram of Sodium in Blood") + geom_density(eval(bquote(aes(y=..count..))),colour="black") + geom_vline(xintercept = 135, linetype = "dashed") + geom_vline(xintercept = 145, linetype = "dashed")
#Death Event and Time
cor.test(data$DEATH_EVENT, data$time)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("tidyverse")
#install.packages("ggplot2")
#install.packages("ggpubr")
#install.packages("corrplot")
library(ggplot2)
library(tidyverse)
library(ggpubr)
library(corrplot)
raw <- read.csv("heart_failure_clinical_records_dataset.csv")
#Looking for any missing data
table(is.na(raw))
#Removing any missing columns
data <- na.omit(raw)
#Quick summary of the data
summary(data)
#Adding ID to keep track of data
data$id <- seq.int(nrow(data))
data <- data %>% relocate(id)
#Assigning Character Value to correct parameters
data$sexCH <- ifelse(data$sex == 1, "Male", "Female")
data$sex <- as.logical(data$sex)
data$anaemiaCH <- ifelse(data$anaemia == 1, "Yes", "No")
data$anaemia <- as.logical(data$anaemia)
data$diabetesCH <- ifelse(data$diabetes == 1, "Yes", "No")
data$diabetes <- as.logical(data$diabetes)
data$high_blood_pressureCH <- ifelse(data$high_blood_pressure == 1, "Yes", "No")
data$high_blood_pressure <- as.logical(data$high_blood_pressure)
data$smokingCH <- ifelse(data$smoking == 1, "Yes", "No")
data$smoking <- as.logical(data$smoking)
data$DEATH_EVENT <- as.logical(data$DEATH_EVENT)
summary(data)
write.csv(data, "./data.csv", row.names = FALSE)
# Since I am using large amounts of data, we can look at the population of the data
# Sex
plotSex <- ggplot(data, aes(x = sexCH)) + geom_bar(fill = "turquoise") + labs(x = "Sex", title = "Population Distributions") + theme_minimal(base_size = 10)
plotSmoke <- ggplot(data, aes(x = smokingCH)) + geom_bar(fill = "orangered") + labs(x = "Smoking") +theme_minimal(base_size = 10)
plotDiab <- ggplot(data, aes(x = diabetesCH)) + geom_bar(fill = "red") + labs(x = "Diabetic") +theme_minimal(base_size = 10)
plotDeath <- ggplot(data, aes(x = DEATH_EVENT)) + geom_bar(fill = "slateblue") + labs(x = "Died during follow up period") +theme_minimal(base_size = 10)
ggarrange(plotSex, plotSmoke, plotDiab, plotDeath)
ggplot(data, aes(x = age, y = smokingCH, color = sexCH)) + geom_boxplot()
#AGE
ggplot(data, aes(x=age)) + geom_histogram(binwidth = 5, colour = "white", fill="seagreen", alpha = 0.7)+ theme_minimal(base_size = 10) + labs(title = "Age Distribution") + geom_density(eval(bquote(aes(y=..count..*5))),colour="black")
#CPK
ggplot(data, aes(x = creatinine_phosphokinase)) + geom_histogram(binwidth = 100, colour = "white", fill = "orangered", alpha = 0.7) + labs(title = "Creatinine Phosphokinase Distribution") + geom_density(eval(bquote(aes(y=..count.. * 100))),colour="black") + geom_vline(xintercept = 10, linetype = "dashed") + geom_vline(xintercept = 120, linetype = "dashed")
#Ejection Fraction
ggplot(data, aes(x = ejection_fraction )) + geom_histogram(binwidth = 5, colour =  "white", fill = "blue", alpha = 0.7) + labs(title = "Histogram of Ejection Fraction") + geom_density(eval(bquote(aes(y=..count..*5))),colour="black") + geom_vline(xintercept = 40, linetype = "dashed") + annotate("text", x = 20, y = 60, label = "Abnormal") + annotate("text", x = 55, y = 60, label = "Normal")
#Platelets
ggplot(data, aes(x = platelets)) + geom_histogram(binwidth = 25000, colour =  "white", fill = "red", alpha = 0.7) + labs(title = "Histogram of Platelet Count") + geom_density(eval(bquote(aes(y=..count.. *25000))),colour="black") + geom_vline(xintercept = 150000, linetype = "dashed") + geom_vline(xintercept = 450000, linetype = "dashed")
#Serum Creatinine
ggplot(data, aes(x = serum_creatinine)) + geom_histogram(binwidth = 0.2, colour =  "white", fill = "plum", alpha = 0.7) + labs(title = "Histogram of Creatinine in Blood") + geom_density(eval(bquote(aes(y=..count..*0.2))),colour="black") + geom_vline(xintercept = 0.59, linetype = "dashed") + geom_vline(xintercept = 1.35, linetype = "dashed")
#Serum Sodium
ggplot(data, aes(x = serum_sodium)) + geom_histogram(binwidth = 1, colour =  "white", fill = "slateblue", alpha = 0.7) + labs(title = "Histogram of Sodium in Blood") + geom_density(eval(bquote(aes(y=..count..))),colour="black") + geom_vline(xintercept = 135, linetype = "dashed") + geom_vline(xintercept = 145, linetype = "dashed")
corrplot(cor(data[2:14]), type = "lower", order = "FPC",
tl.col = "black", tl.srt = 30)
cor.test(data$DEATH_EVENT, data$age)
cor.test(data$DEATH_EVENT, data$serum_creatinine)
cor.test(data$serum_creatinine, data$age)
#Being older does not mean that the number of creatinine in your blood specifically increases, however there is a weak correlation of 0.159
#Due to p-value being higher than 0.005 it is significant enough.
set.seed(64)
split <- sample(c(rep(0, 0.7 * nrow(data)),
rep(1, 0.3 * nrow(data))))
data_train <- data[split == 0,]
data_test <- data[split == 1,]
model <- glm(data = data_train, family = "binomial", formula = DEATH_EVENT ~ age + anaemia + creatinine_phosphokinase + diabetes + ejection_fraction + high_blood_pressure + platelets + serum_creatinine + serum_sodium + sex + smoking + time)
summary.glm(model)
simple <- step(model)
summary.glm(simple)
exp(coef(simple))
plot(simple)
predictions <- predict(simple, data_test, type = "response")
output <- ifelse(predictions>0.5, 1,0)
print("Output of prediction based on test data")
test_output <- table(Actuals = data_test$DEATH_EVENT, Predictions = predictions>0.5)
print(test_output)
test_acc <- (test_output[1:1] + test_output[2:2])/nrow(data_test)
print(paste("Accuracy of the model on the training set:", test_acc))
newtest = [63,FALSE,175,TRUE,55,TRUE,200000,1.7,115,TRUE,FALSE,30]
newtest = (63,FALSE,175,TRUE,55,TRUE,200000,1.7,115,TRUE,FALSE,30)
newtest = (63, FALSE, 175, TRUE, 55, TRUE, 200000, 1.7, 115, TRUE, FALSE, 30)
newtest = (63, FALSE, 175, TRUE, 55, TRUE, 200000, 1.7, 115, TRUE, FALSE, 30)
newtest = (63, FALSE, 175, TRUE, 55, TRUE, 200000, 1.7, 115, TRUE, FALSE, 30)
newtest = (63, FALSE, 175, TRUE, 55, TRUE, 200000, 1.7, 115, TRUE, FALSE, 30)
newtest = (63, FALSE, 175, TRUE, 55, TRUE, 200000, 1.7, 115, TRUE, FALSE, 30)
View(simple)
newtest = c(63, FALSE, 175, TRUE, 55, TRUE, 200000, 1.7, 115, TRUE, FALSE, 30)
newtest = c(63, FALSE, 175, TRUE, 55, TRUE, 200000, 1.7, 115, TRUE, FALSE, 30)
newtest = c(63, FALSE, 175, TRUE, 55, TRUE, 200000, 1.7, 115, TRUE, FALSE, 30)
newpred = predict(simple, newtest, type = "response")
View(data_train)
newtest = c(colnames(data_train),(63, FALSE, 175, TRUE, 55, TRUE, 200000, 1.7, 115, TRUE, FALSE, 30))
newtest = c(colnames(data_train),(63, FALSE, 175, TRUE, 55, TRUE, 200000, 1.7, 115, TRUE, FALSE, 30))
newtest = c(colnames(data_train)(63, FALSE, 175, TRUE, 55, TRUE, 200000, 1.7, 115, TRUE, FALSE, 30))
newtest = c(colnames(data_train),(63, FALSE, 175, TRUE, 55, TRUE, 200000, 1.7, 115, TRUE, FALSE, 30))
newtest = [colnames(data_train),(63, FALSE, 175, TRUE, 55, TRUE, 200000, 1.7, 115, TRUE, FALSE, 30)]
newtest = [colnames(data_train),(63, FALSE, 175, TRUE, 55, TRUE, 200000, 1.7, 115, TRUE, FALSE, 30)]
newtest = [colnames(data_train),(63, FALSE, 175, TRUE, 55, TRUE, 200000, 1.7, 115, TRUE, FALSE, 30)]
newtest = [colnames(data_train)]
newtest = colnames(data_train)
newtest
newpred = predict(simple, newtest, type = "response")
View(data)
View(data_train)
View(data_test)
View(data_train)
newtest = data.frame(300,63, FALSE, 175, TRUE, 55, TRUE, 200000, 1.7, 115, TRUE, FALSE, 30)
newtest
newpred = predict(simple, newtest, type = "response")
newtest = data.frame(300, 63, FALSE, 175, TRUE, 55, TRUE, 200000, 1.7, 115, TRUE, FALSE, 30)
newtest
newpred = predict(simple, newtest, type = "response")
newtest = data.frame(63, FALSE, 175, TRUE, 55, TRUE, 200000, 1.7, 115, TRUE, FALSE, 30)
newtest
newpred = predict(simple, newtest, type = "response")
newpred = predict(simple, newtest, type = "response")
ggplot(aes = data (x = ejection_fraction, y = age, fill = DEATH_EVENT)) + geom_point()
ggplot(data, aes(x = ejection_fraction, y = age, fill = DEATH_EVENT)) + geom_point()
ggplot(data, aes(x = ejection_fraction, y = age, color = DEATH_EVENT)) + geom_point()
ggplot(data, aes(x = ejection_fraction, y = age, color = DEATH_EVENT)) + geom_point() + labs(title = "Age vs Ejection Fraction by Death Event")
ggplot(data, aes(x = ejection_fraction, y = age, color = DEATH_EVENT)) + geom_point() + labs(title = "Age vs Ejection Fraction by Death Event")
ggplot(data, aes(x = creatinine_phosphokinase, y =age, color = DEATH_EVENT)) + geom_point() + labs(title = "Age vs Creatine Phosphokinase by Death Event")
ggplot(data, aes(x = ejection_fraction, y = age, color = DEATH_EVENT)) + geom_point() + labs(title = "Age vs Ejection Fraction by Death Event")
ggplot(data, aes(x = creatinine_phosphokinase, y =age, color = DEATH_EVENT)) + geom_point() + labs(title = "Age vs Creatine Phosphokinase by Death Event")
cor(data$DEATH_EVENT ~ data$ejection_fraction, data$age)
ggplot(data, aes(x = ejection_fraction, y = age, color = DEATH_EVENT)) + geom_point() + labs(title = "Age vs Ejection Fraction by Death Event")
ggplot(data, aes(x = creatinine_phosphokinase, y =age, color = DEATH_EVENT)) + geom_point() + labs(title = "Age vs Creatine Phosphokinase by Death Event")
cor(data$ejection_fraction, data$age)
library(caret)
library(ROCR)
install.packages("caret")
install.packages("ROCR")
install.packages("caret")
install.packages("caret")
install.packages("ROCR")
library(caret)
library(ROCR)
knitr::opts_chunk$set(comment = '>')
